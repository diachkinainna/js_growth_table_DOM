{"mappings":"ACEA,IAAM,EAAU,SAAS,aAAa,CAAC,cACjC,EAAQ,SAAS,aAAa,CAAC,UAErC,EAAQ,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,WAC1B,EAAO,EAAM,IAAI,CAEvB,GAAI,EAAO,SAAS,CAAC,QAAQ,CAAC,cAAe,CAC3C,GAAI,EAAK,MAAM,CAAG,GAAI,CACpB,IAAM,EAAU,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CAC/B,EAAS,EAAQ,SAAS,CAAC,CAAA,GAEjC,EAAQ,KAAK,CAAC,EAChB,CAEoB,KAAhB,EAAK,MAAM,EACb,EAAO,YAAY,CAAC,WAAY,CAAA,GAGd,IAAhB,EAAK,MAAM,EAGb,AAFmB,SAAS,aAAa,CAAC,eAE/B,eAAe,CAAC,WAE/B,CAkBA,GAhBI,EAAO,SAAS,CAAC,QAAQ,CAAC,gBACxB,EAAK,MAAM,CAAG,GAChB,EAAM,SAAS,CAAC,EAAK,MAAM,CAAG,GAGZ,IAAhB,EAAK,MAAM,EACb,EAAO,YAAY,CAAC,WAAY,CAAA,GAGd,IAAhB,EAAK,MAAM,EAGb,AAFmB,SAAS,aAAa,CAAC,eAE/B,eAAe,CAAC,aAI3B,EAAO,SAAS,CAAC,QAAQ,CAAC,iBAAkB,CAEvC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,GAA3B,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,SAAS,aAAa,CAAC,MAElC,EAAI,MAAM,CAAC,EACb,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOsB,KAAzB,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EACtB,EAAO,YAAY,CAAC,WAAY,CAAA,GAGL,IAAzB,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAGtB,AAFmB,SAAS,aAAa,CAAC,kBAE/B,eAAe,CAAC,WAE/B,CAEA,GAAI,EAAO,SAAS,CAAC,QAAQ,CAAC,iBAAkB,CAEvC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,EAA3B,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CAGH,AAFe,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAEvC,MAAM,EACf,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOsB,IAAzB,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EACtB,EAAO,YAAY,CAAC,WAAY,CAAA,GAGL,IAAzB,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAGtB,AAFmB,SAAS,aAAa,CAAC,kBAE/B,eAAe,CAAC,WAE/B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar buttons = document.querySelector(\".container\");\nvar table = document.querySelector(\".field\");\nbuttons.addEventListener(\"click\", function(e) {\n    var button = e.target.closest(\".button\");\n    var rows = table.rows;\n    if (button.classList.contains(\"append-row\")) {\n        if (rows.length < 10) {\n            var lastRow = rows[rows.length - 1];\n            var newRow = lastRow.cloneNode(true);\n            lastRow.after(newRow);\n        }\n        if (rows.length === 10) button.setAttribute(\"disabled\", true);\n        if (rows.length === 3) {\n            var antiButton = document.querySelector(\".remove-row\");\n            antiButton.removeAttribute(\"disabled\");\n        }\n    }\n    if (button.classList.contains(\"remove-row\")) {\n        if (rows.length > 2) table.deleteRow(rows.length - 1);\n        if (rows.length === 2) button.setAttribute(\"disabled\", true);\n        if (rows.length === 9) {\n            var antiButton1 = document.querySelector(\".append-row\");\n            antiButton1.removeAttribute(\"disabled\");\n        }\n    }\n    if (button.classList.contains(\"append-column\")) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        if (rows[0].cells.length < 10) try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                var td = document.createElement(\"td\");\n                row.append(td);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        if (rows[0].cells.length === 10) button.setAttribute(\"disabled\", true);\n        if (rows[0].cells.length === 3) {\n            var antiButton2 = document.querySelector(\".remove-column\");\n            antiButton2.removeAttribute(\"disabled\");\n        }\n    }\n    if (button.classList.contains(\"remove-column\")) {\n        var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n        if (rows[0].cells.length > 2) try {\n            for(var _iterator1 = rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                var row1 = _step1.value;\n                var lastTd = row1.cells[row1.cells.length - 1];\n                lastTd.remove();\n            }\n        } catch (err) {\n            _didIteratorError1 = true;\n            _iteratorError1 = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                    _iterator1.return();\n                }\n            } finally{\n                if (_didIteratorError1) {\n                    throw _iteratorError1;\n                }\n            }\n        }\n        if (rows[0].cells.length === 2) button.setAttribute(\"disabled\", true);\n        if (rows[0].cells.length === 9) {\n            var antiButton3 = document.querySelector(\".append-column\");\n            antiButton3.removeAttribute(\"disabled\");\n        }\n    }\n});\n\n//# sourceMappingURL=index.6997a291.js.map\n","'use strict';\n\nconst buttons = document.querySelector('.container');\nconst table = document.querySelector('.field');\n\nbuttons.addEventListener('click', (e) => {\n  const button = e.target.closest('.button');\n  const rows = table.rows;\n\n  if (button.classList.contains('append-row')) {\n    if (rows.length < 10) {\n      const lastRow = rows[rows.length - 1];\n      const newRow = lastRow.cloneNode(true);\n\n      lastRow.after(newRow);\n    }\n\n    if (rows.length === 10) {\n      button.setAttribute('disabled', true);\n    }\n\n    if (rows.length === 3) {\n      const antiButton = document.querySelector('.remove-row');\n\n      antiButton.removeAttribute('disabled');\n    }\n  }\n\n  if (button.classList.contains('remove-row')) {\n    if (rows.length > 2) {\n      table.deleteRow(rows.length - 1);\n    }\n\n    if (rows.length === 2) {\n      button.setAttribute('disabled', true);\n    }\n\n    if (rows.length === 9) {\n      const antiButton = document.querySelector('.append-row');\n\n      antiButton.removeAttribute('disabled');\n    }\n  }\n\n  if (button.classList.contains('append-column')) {\n    if (rows[0].cells.length < 10) {\n      for (const row of rows) {\n        const td = document.createElement('td');\n\n        row.append(td);\n      }\n    }\n\n    if (rows[0].cells.length === 10) {\n      button.setAttribute('disabled', true);\n    }\n\n    if (rows[0].cells.length === 3) {\n      const antiButton = document.querySelector('.remove-column');\n\n      antiButton.removeAttribute('disabled');\n    }\n  }\n\n  if (button.classList.contains('remove-column')) {\n    if (rows[0].cells.length > 2) {\n      for (const row of rows) {\n        const lastTd = row.cells[row.cells.length - 1];\n\n        lastTd.remove();\n      }\n    }\n\n    if (rows[0].cells.length === 2) {\n      button.setAttribute('disabled', true);\n    }\n\n    if (rows[0].cells.length === 9) {\n      const antiButton = document.querySelector('.append-column');\n\n      antiButton.removeAttribute('disabled');\n    }\n  }\n});\n"],"names":["buttons","document","querySelector","table","addEventListener","e","button","target","closest","rows","classList","contains","length","lastRow","newRow","cloneNode","after","setAttribute","antiButton","removeAttribute","deleteRow","antiButton1","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","cells","_step","_iterator","Symbol","iterator","next","done","row","value","td","createElement","append","err","return","antiButton2","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","row1","lastTd","remove","antiButton3"],"version":3,"file":"index.6997a291.js.map"}